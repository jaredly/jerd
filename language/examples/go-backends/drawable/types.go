package main
// AUTOGENERATED by 'node bootstrap.js go-types'
type T51486760 bool

// skipping TAs, contains type variables

type TNone bool

// skipping TSome, contains type variables

/* struct Vec2#🍱🐶💣 {
    x: float;
    y: float;
} */
type T08f7c2ac struct {
    x float64;
    y float64;
};

/* struct Arc#🧨🍕😮😃 {
    center: Vec2#🍱🐶💣;
    startAngle: float;
    endAngle: float;
    counterClockwise: bool;
} */
type T443a6bbd struct {
    center T08f7c2ac;
    startAngle float64;
    endAngle float64;
    counterClockwise bool;
};

/* struct CSS#🧑‍🤝‍🧑🍞🏍️😃 {
    value: string;
} */
type T742a31c2 struct {
    value string;
};

/* struct Rgba#🌛👨‍🦱👨‍🎤😃 {
    r: float;
    g: float;
    b: float;
    a: float;
} */
type T52033f94 struct {
    r float64;
    g float64;
    b float64;
    a float64;
};

type T1fe34118 struct {
    tag int;
    value string;
    r float64;
    g float64;
    b float64;
    a float64;
};

/* struct Quadratic#🏐⛩️🛀😃 {
    control: Vec2#🍱🐶💣;
    end: Vec2#🍱🐶💣;
} */
type T5c0c4fd8 struct {
    control T08f7c2ac;
    end T08f7c2ac;
};

/* struct Bezier#🦠💟🕓 {
    c1: Vec2#🍱🐶💣;
    c2: Vec2#🍱🐶💣;
    c3: Vec2#🍱🐶💣;
    c4: Vec2#🍱🐶💣;
    end: Vec2#🍱🐶💣;
} */
type T37a1f256 struct {
    c1 T08f7c2ac;
    c2 T08f7c2ac;
    c3 T08f7c2ac;
    c4 T08f7c2ac;
    end T08f7c2ac;
};

/* struct Rounded#🐧 {
    c1: Vec2#🍱🐶💣;
    c2: Vec2#🍱🐶💣;
    radius: float;
} */
type Tb7a4f230 struct {
    c1 T08f7c2ac;
    c2 T08f7c2ac;
    radius float64;
};

/* struct EllipsePath#💯 {
    ...Arc#🧨🍕😮😃;
    radius: Vec2#🍱🐶💣;
    rotation: float;
} */
type T92791c88 struct {
    radius T08f7c2ac;
    rotation float64;
    center T08f7c2ac;
    startAngle float64;
    endAngle float64;
    counterClockwise bool;
};

type T33159eb4 struct {
    tag int;
    x float64;
    y float64;
    control T08f7c2ac;
    end T08f7c2ac;
    c1 T08f7c2ac;
    c2 T08f7c2ac;
    c3 T08f7c2ac;
    c4 T08f7c2ac;
    radius float64;
    center T08f7c2ac;
    startAngle float64;
    endAngle float64;
    counterClockwise bool;
    rotation float64;
};

/* struct Path#👍 {
    start: Vec2#🍱🐶💣;
    closed: bool;
    parts: Array<PathPart#🍢🧞‍♀️🚌>;
} */
type Tddadd8a8 struct {
    start T08f7c2ac;
    closed bool;
    parts []T33159eb4;
};

/* struct Ellipse#🥡🥌🖐️ {
    pos: Vec2#🍱🐶💣;
    radius: Vec2#🍱🐶💣;
    rotation: float;
} */
type T098fbabc struct {
    pos T08f7c2ac;
    radius T08f7c2ac;
    rotation float64;
};

/* struct Line#🗨️🛸🧞😃 {
    p1: Vec2#🍱🐶💣;
    p2: Vec2#🍱🐶💣;
} */
type T565da092 struct {
    p1 T08f7c2ac;
    p2 T08f7c2ac;
};

/* struct Polygon#🦾 {
    points: Array<Vec2#🍱🐶💣>;
    closed: bool;
} */
type Tcafe28b8 struct {
    points []T08f7c2ac;
    closed bool;
};

/* struct Rect#🏣🎰👨‍✈️ {
    pos: Vec2#🍱🐶💣;
    size: Vec2#🍱🐶💣;
    rotation: float;
} */
type T126fdf00 struct {
    pos T08f7c2ac;
    size T08f7c2ac;
    rotation float64;
};

type T619d2fc4 struct {
    tag int;
    pos T08f7c2ac;
    radius T08f7c2ac;
    rotation float64;
    p1 T08f7c2ac;
    p2 T08f7c2ac;
    points []T08f7c2ac;
    closed bool;
    size T08f7c2ac;
    start T08f7c2ac;
    parts []T33159eb4;
};

/* struct Fill#😥🤮🧨 {
    geom: Geom#🎎🛣️🐹😃;
    color: Color#👩‍💼👨‍🦳🐆;
} */
type T3bd0cc4c struct {
    geom T619d2fc4;
    color T1fe34118;
};

type T1ac05bf8 bool

type T155bb0ac bool

type T5e11f0b9 struct {
    tag int;
};

/* struct Stroke#👶 {
    geom: Geom#🎎🛣️🐹😃;
    color: Color#👩‍💼👨‍🦳🐆;
    width: float;
    lineCaps: LineCap#🦿💟👨‍👧‍👦😃;
} */
type Tadcc8cc6 struct {
    geom T619d2fc4;
    color T1fe34118;
    width float64;
    lineCaps T5e11f0b9;
};

type T43051e9e bool

type T5cfc662e bool

type T1189540a bool

type T098d99e8 bool

type T830ad468 bool

type Teaefd106 struct {
    tag int;
};

/* struct Text#🍿 {
    text: string;
    color: Color#👩‍💼👨‍🦳🐆;
    pos: Vec2#🍱🐶💣;
    stroke: float;
    font: string;
    textAlign: TextAlign#👩‍🏫;
} */
type Td86ebaa8 struct {
    text string;
    color T1fe34118;
    pos T08f7c2ac;
    stroke float64;
    font string;
    textAlign Teaefd106;
};

type T56de3b71 struct {
    tag int;
    geom T619d2fc4;
    color T1fe34118;
    width float64;
    lineCaps T5e11f0b9;
    text string;
    pos T08f7c2ac;
    stroke float64;
    font string;
    textAlign Teaefd106;
};

// skipping T1e1c730c, contains type variables





type None = TNone

type Vec2 = T08f7c2ac

type Arc = T443a6bbd

type CSS = T742a31c2

type Rgba = T52033f94

type Color = T1fe34118

type Quadratic = T5c0c4fd8

type Bezier = T37a1f256

type Rounded = Tb7a4f230

type EllipsePath = T92791c88

type PathPart = T33159eb4

type Path = Tddadd8a8

type Ellipse = T098fbabc

type Line = T565da092

type Polygon = Tcafe28b8

type Rect = T126fdf00

type Geom = T619d2fc4

type Fill = T3bd0cc4c

type Butt = T1ac05bf8

type Round = T51486760

type Square = T155bb0ac

type LineCap = T5e11f0b9

type Stroke = Tadcc8cc6

type Left = T43051e9e

type Right = T5cfc662e

type Center = T1189540a

type Start = T098d99e8

type End = T830ad468

type TextAlign = Teaefd106

type Text = Td86ebaa8

type Drawable = T56de3b71



const Color_CSS int = 0

const Color_Rgba int = 1

const PathPart_Vec2 int = 0

const PathPart_Quadratic int = 1

const PathPart_Bezier int = 2

const PathPart_Rounded int = 3

const PathPart_Arc int = 4

const PathPart_EllipsePath int = 5

const Geom_Ellipse int = 0

const Geom_Line int = 1

const Geom_Polygon int = 2

const Geom_Rect int = 3

const Geom_Path int = 4

const LineCap_Butt int = 0

const LineCap_Round int = 1

const LineCap_Square int = 2

const TextAlign_Left int = 0

const TextAlign_Right int = 1

const TextAlign_Center int = 2

const TextAlign_Start int = 3

const TextAlign_End int = 4

const Drawable_Fill int = 0

const Drawable_Stroke int = 1

const Drawable_Text int = 2