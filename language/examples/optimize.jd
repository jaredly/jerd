type Eq<T> = {
    "==": (T, T) => bool
}

// ugh ok I really need a tuple type
const arrayEq: <T,>(Array<T>, Array<T>, Eq<T>) => bool
 = <T,>(one: Array<T>, two: Array<T>, eq: Eq<T>): bool => {
    switch (one, two) {
        ([], []) => true,
        ([one, ...rone], [two, ...rtwo]) => if eq."=="(one, two) {
            arrayEq(rone, rtwo, eq)
        } else {
            false
        },
        _ => false
    }
}
